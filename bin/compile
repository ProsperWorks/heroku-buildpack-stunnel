#!/usr/bin/env bash

# Unofficial Bash strict mode.
#
# Brittle but fails fast when assumptions are not met.
#
set -euo pipefail

# Echo all the commands here as they are executed.  Noisy but handy
# for debugging.
#
set -x

# Standard buildpack bin/compile call syntax, per:
#
#   https://devcenter.heroku.com/articles/buildpack-api#buildpack-api
#
BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

# Place for intermediate artifacts which should not be carried on into
# the slug.
#
BUILDPACK_DIR="$PWD"

# Place where we stunnel will be installed on the executing dyno.
#
PREFIX_DIR="/app/vendor/stunnel"

# Stunnel release source tarballs come from:
#
#   https://www.stunnel.org/downloads.html
#
# This is a fast build, 8s for './configure' and 5s for 'make -j 5',
# so we skip the risk and hassle of exploiting $CACHE_DIR.
#
STUNNEL_PACKAGE="stunnel-5.48"
cd "$BUILDPACK_DIR"
tar xvfz "$BUILDPACK_DIR/$STUNNEL_PACKAGE.tar.gz"
cd "$STUNNEL_PACKAGE"
./configure --prefix "$PREFIX_DIR"
make -j "${NUM_JOBS:-5}"
env DESTDIR="$BUILD_DIR" make install
find "$BUILD_DIR" -name stunnel
ls -l "$BUILD_DIR"
mkdir -p "$BUILD_DIR/vendor"
mv       "$BUILD_DIR/$PREFIX_DIR" "$BUILD_DIR/vendor/stunnel"
#rmdir    "$BUILD_DIR/app/vendor"
#rmdir    "$BUILD_DIR/app"

# We make sure this stunnel is near the front of the $PATH when the
# dyno excecutes, per:
#
#   https://devcenter.heroku.com/articles/buildpack-api#profile-d-scripts
#
PROFILE_D_SH="$BUILD_DIR/.profile.d/guest-env.sh"
mkdir -p "$BUILD_DIR/.profile.d"
echo "export PATH=\"$PREFIX_DIR/bin:\$PATH\"" >> "$PROFILE_D_SH"
